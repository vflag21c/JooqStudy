/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JInventory;
import org.jooq.generated.tables.pojos.Inventory;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InventoryRecord extends UpdatableRecordImpl<InventoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sakila.inventory.inventory_id</code>.
     */
    public InventoryRecord setInventoryId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sakila.inventory.inventory_id</code>.
     */
    public UInteger getInventoryId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>sakila.inventory.film_id</code>.
     */
    public InventoryRecord setFilmId(UShort value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sakila.inventory.film_id</code>.
     */
    public UShort getFilmId() {
        return (UShort) get(1);
    }

    /**
     * Setter for <code>sakila.inventory.store_id</code>.
     */
    public InventoryRecord setStoreId(UByte value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sakila.inventory.store_id</code>.
     */
    public UByte getStoreId() {
        return (UByte) get(2);
    }

    /**
     * Setter for <code>sakila.inventory.last_update</code>.
     */
    public InventoryRecord setLastUpdate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sakila.inventory.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InventoryRecord
     */
    public InventoryRecord() {
        super(JInventory.INVENTORY);
    }

    /**
     * Create a detached, initialised InventoryRecord
     */
    public InventoryRecord(UInteger inventoryId, UShort filmId, UByte storeId, LocalDateTime lastUpdate) {
        super(JInventory.INVENTORY);

        setInventoryId(inventoryId);
        setFilmId(filmId);
        setStoreId(storeId);
        setLastUpdate(lastUpdate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InventoryRecord
     */
    public InventoryRecord(Inventory value) {
        super(JInventory.INVENTORY);

        if (value != null) {
            setInventoryId(value.getInventoryId());
            setFilmId(value.getFilmId());
            setStoreId(value.getStoreId());
            setLastUpdate(value.getLastUpdate());
            resetChangedOnNotNull();
        }
    }
}
